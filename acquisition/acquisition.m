classdef acquisition < handle
    %UNTITLED4 Summary of this class goes here
    %   Detailed explanation goes here
    % Version Morganne
    properties (Access = public)
        % Values in each UIcontrol
        valPort = 1;
        valBaudrate = 7;
        valDatabits = 2;
        valStopbits = 1;
        valTerminator = 3;
        valParity = 1;
        valBoxBefore = 1;
        valBoxAfter = 0;
        
        
        % Parameters values
        port
        baudRate
        dataBits
        stopBits
        parity
        terminator
        xmlFile
        station
        
        % Value Timer
        time = '10';
        pressure
        modulo
        state
        
        % Val stati
        med
        variance
        average
        standDev
        
    end
    
    properties (Access = private)
        
        configFile = [prefdir, filesep, mfilename, '.mat'];
        
    end
    
    
    properties (Access = private, SetObservable)
        % Panels
        hdlFig
        hdlMainPanel
        hdlPanelSerial
        hdlPanelMeasure
        hdlPanelTreat
        
        % Panel serial
        
        hdlWriteTimer
        hdlWriteStation
        hdlSelectPort
        hdlSelectDatabits
        hdlSelectBaudrate
        hdlSelectStopbits
        hdlSelectTerminator
        hdlSelectParity
        hdlXmlFile
        hdlXmlFileSelect
        hdlCheckBox
        hdlCheckboxBefore
        hdlCheckboxAfter
        
        % Panel measure
        hdlButtonStart
        hdlReadPressure
        hdlReadModulo
        
        % Panel Treatment
        hdlReadMedian
        hdlReadVar
        hdlReadMean
        hdlReadStandDev
        
        
    end
    
    methods % Public
        
        % Constructor
        function obj = acquisition()
            
            obj.hdlFig = figure( ...
                'Name','Processing ',...
                'NumberTitle', 'off', ...
                'MenuBar', 'None',...
                'Toolbar', 'None', ...
                'WindowStyle', 'normal', ...
                'numbertitle', 'off',...
                'HandleVisibility','on',...
                'Position',[100 400 700 620],...
                'CloseRequestFcn', {@(src,evt) delete(obj)});
            
            obj.hdlMainPanel = uipanel(obj.hdlFig, ...
                'title', 'Configuration ', ...
                'FontSize',12,...
                'BackgroundColor','white',...
                'position', [0. 0 1 1],...
                'FontWeight', 'bold');
            
            obj.hdlPanelSerial = uipanel('Parent',obj.hdlFig,...
                'Title','Initialisation Serial Port',...
                'FontSize',12,...
                'Position',[0. .6 1 .359],...
                'FontWeight', 'bold');
            
            obj.hdlPanelMeasure =  uipanel('Parent',obj.hdlFig,...
                'Title','Measure',...
                'FontSize',12,...
                'Position',[0. .3 1 .29],...
                'FontWeight', 'bold');
            
            obj.hdlPanelTreat =  uipanel('Parent',obj.hdlFig,...
                'Title','Treatment',...
                'FontSize',12,...
                'Position',[0. .02 1 .25],...
                'FontWeight', 'bold');
            
            loadConfig(obj);
            obj.setUicontrols;
            
        end
        
        
        % Destructor
        function delete(obj)
            % method save_config
            saveConfig(obj);
            closereq;
        end
        
        % Fonction set UIcontrol
        %-----------------------------------------------------
        
        function setUicontrols(obj)
            % Uicontrol Panel Serial
            %---------------------------------------------------
            % Station
            uicontrol( obj.hdlPanelSerial ,...
                'style' , 'Text' ,...
                'Position' , [ 20 120 100 30 ] ,...
                'String' ,' Station ' ,...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlWriteStation = uicontrol ( obj.hdlPanelSerial ,...
                'style' , ' edit' ,...
                'BackGroundcolor','w',...
                'string', obj.station, ...
                'position', [20,105,100,25]);
            
            % Timer
            uicontrol( obj.hdlPanelSerial ,...
                'style' , 'Text' ,...
                'Position' , [ 20 65 100 30 ] ,...
                'String' ,' Timer ' ,...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlWriteTimer = uicontrol ( obj.hdlPanelSerial ,...
                'style' , ' edit' ,...
                'BackGroundcolor','w',...
                'string', obj.time, ...
                'position', [20,50,100,25],...
                'callback', {@(src,evt) selectTimer(obj,src)});
            
            % Parameters Serial Port
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Port' ,...
                'Position' ,[190 120 60 80],...
                'FontWeight', 'bold',...
                'FontSize',9);
            
            obj.hdlSelectPort = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,us191.serial.Discover ,...
                'Value',obj.valPort,...
                'Position' ,[260 170 100 30],...
                'callback', {@(src,evt) selectValPort(obj,src)});
            
            
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Databits' ,...
                'Position' ,[190 105 60 30],...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlSelectDatabits = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,'7|8' ,...
                'Value',obj.valDatabits,...
                'Position' ,[260 110 100 30],...
                'callback', {@(src,evt) selectValDatabits(obj,src)}) ;
            
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Baudrate' ,...
                'Value',obj.valBaudrate,...
                'Position' ,[190 135 60 30],...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlSelectBaudrate = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,'300|600|1200|2400|4800|9600|19200|57600|112000',...
                'Position' ,[260 140 100 30],...
                'Value',obj.valBaudrate,...
                'callback', {@(src,evt) selectValBaudrate(obj,src)});
            
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Stopbits' , ...
                'Position', [190 25 60 80],...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlSelectStopbits = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,'1|2' ,...
                'Value',obj.valStopbits,...
                'Position' ,[260 80 100 30],...
                'callback', {@(src,evt) selectValStopbits(obj,src)});
            
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Terminator' ,...
                'Position' ,[185 7 65 70],...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlSelectTerminator = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,'CR|LF|CR/LF' ,...
                'Value',obj.valTerminator,...
                'Position' ,[260 45 100 30],...
                'callback', {@(src,evt) selectValTerminator(obj,src)} );
            
            uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'Text' ,...
                'String' ,'Parity' ,...
                'Position' ,[185 0 65 40],...
                'FontWeight', 'bold',...
                'FontSize',9 );
            
            obj.hdlSelectParity = uicontrol ( obj.hdlPanelSerial ,...
                'Style' , 'popup' ,...
                'String' ,'none|even|odd' ,...
                'Value',obj.valParity,...
                'Position' ,[260 10 100 30],...
                'callback', {@(src,evt) selectValParity(obj,src)} );
            
            % xml file
            uicontrol(obj.hdlPanelSerial,...
                'style', 'Text', ...
                'FontWeight', 'bold',...
                'String', 'Sbebird XML config file',...
                'units', 'normalized',...
                'position', [0.55 0.23 0.45 0.1],...
                'HorizontalAlignment', 'left');
            
            obj.hdlXmlFile = uicontrol(obj.hdlPanelSerial,...
                'style', 'edit', ...
                'units', 'normalized', ...
                'position', [0.55 0.10 0.33 0.10], ...
                'tag', 'XMLFILE', ...
                'string', obj.xmlFile, ...
                'HorizontalAlignment', 'left',...
                'TooltipString', 'XML configuration file .xml');
            
            obj.hdlXmlFileSelect = uicontrol(obj.hdlPanelSerial,...
                'string', 'Select', ...
                'units', 'normalized', ...
                'position', [0.88 0.10 0.10 0.1], ...
                'tag', 'XMLFILE_SELECT', ...
                'callback', {@(src,evt) selectXmlFile(obj)});
            
            % CheckBox
            
            obj.hdlCheckBox  = uibuttongroup(obj.hdlPanelSerial ,...
                'Visible','on',...
                'Position',[0.6 0.5 0.16 0.5]);
            
            obj.hdlCheckboxBefore = uicontrol(obj.hdlCheckBox,...
                'Style','radiobutton',...
                'String','Before Profil',...
                'Value',obj.valBoxBefore,...
                'FontWeight', 'bold',...
                'Position',[15 50 100 30],...
                'HandleVisibility','on');
            
            obj.hdlCheckboxAfter = uicontrol(obj.hdlCheckBox,...
                'Style','radiobutton',...
                'String','After Profil',...
                'Value',obj.valBoxAfter,...
                'FontWeight', 'bold',...
                'Position',[15 25 100 30],...
                'HandleVisibility','on');
            
            % Uicontrol Panel Measure
            %-------------------------------------------------
            
            %Start/Stop
            uicontrol(obj.hdlPanelMeasure ,...
                'style' , 'Text' , ...
                'Position' , [ 150 100 100 30 ] ,...
                'String' ,' Launch / Stop ' ,...
                'FontWeight', 'bold',...
                'FontSize',10  );
            
            obj.hdlButtonStart = uicontrol (obj.hdlPanelMeasure ,...
                'style' , 'push' ,...
                'position' , [150 40 80 50 ] ,...
                'string' , 'START',...
                'userdata', false,...
                'FontWeight', 'bold',...
                'BackGroundcolor','g',...
                'callback', {@(src,evt) startAcquisition(obj,src)});
            
            
            uicontrol(obj.hdlPanelMeasure ,...
                'style' , 'Text' ,...
                'Position' , [ 350 120 200 30 ] ,...
                'String' ,' Measures in real time ' ,...
                'FontWeight', 'bold',...
                'FontSize',10);
            
            uicontrol( obj.hdlPanelMeasure ,...
                'style' , 'Text' ,...
                'Position' , [400 90 100 30 ] ,...
                'String' ,' Pressure ' ,...
                'FontWeight', 'bold',...
                'FontSize',10);
            
            obj.hdlReadPressure = uicontrol ( obj.hdlPanelMeasure ,...
                'style' , ' text' ,...
                'String', obj.pressure,...
                'position', [400,75,100,25] ...
                ,'BackGroundcolor','w' );
            
            
            uicontrol( obj.hdlPanelMeasure ,...
                'style' , 'Text' ,...
                'Position' , [ 500 80 50 15 ] ,...
                'String' ,' db ' ,...
                'FontWeight', 'bold',...
                'FontSize',10);
            
            
            uicontrol( obj.hdlPanelMeasure  ,...
                'style' , 'Text' ,...
                'Position' , [ 400 40 100 30 ] ,...
                'String' ,' Modulo ' ,...
                'FontWeight', 'bold',...
                'FontSize',10);
            
            obj.hdlReadModulo = uicontrol ( obj.hdlPanelMeasure  ,...
                'style' , ' text' ,...
                'String',obj.modulo,...
                'position', [400,25,100,25] ,...
                'BackGroundcolor','w' );
            
            % Uicontrol Panel Treat
            %-------------------------------------------------
            uicontrol( obj.hdlPanelTreat ,...
                'style' , 'Text' ,...
                'Position' , [ 350 130 200 30 ] ,...
                'String' ,' Measures in real time ' ,...
                'FontWeight', 'bold', 'FontSize',10  );
            
            uicontrol( obj.hdlPanelTreat  ,...
                'style' , 'Text' ,...
                'position',[ 15 80 100 30 ] ,...
                'String' ,' Mean ' ,...
                'FontWeight', 'bold',...
                'FontSize',10);
            
            obj.hdlReadMean = uicontrol ( obj.hdlPanelTreat ,...
                'style' , 'Text' ,...
                'String',char(obj.average),...
                'BackGroundcolor','w',...
                'position' , [20 60 90 25 ] );
            
            uicontrol( obj.hdlPanelTreat  ,...
                'style' , 'Text' , ...
                'Position' ,[ 180 80 100 30 ] ,...
                'String' ,' Variance ' ,...
                'FontWeight', 'bold',...
                'FontSize',10 );
            
            obj.hdlReadVar = uicontrol ( obj.hdlPanelTreat ,...
                'style' , 'Text' ,...
                'BackGroundcolor','w',...
                'String',obj.variance,...
                'position' , [180 60 90 25 ]  );
            
            uicontrol( obj.hdlPanelTreat  ,...
                'style' , 'Text' ,...
                'Position', [ 340 80 100 30 ] ,...
                'String' ,' Median ' ,...
                'FontWeight', 'bold',...
                'FontSize',10 );
            
            obj.hdlReadMedian = uicontrol ( obj.hdlPanelTreat ,...
                'style' , 'Text' ,...
                'String',obj.med,...
                'BackGroundcolor','w',...
                'position' , [345 60 90 25 ]);
            
            uicontrol( obj.hdlPanelTreat  ,...
                'style' , 'Text' ,...
                'Position' ,[ 500 80 130 30 ] ,...
                'String' ,' Standard deviation ' ,...
                'FontWeight', 'bold',...
                'FontSize',10 );
            
            obj.hdlReadStandDev = uicontrol ( obj.hdlPanelTreat ,...
                'style' , 'Text' ,...
                'String',obj.standDev,...
                'BackGroundcolor','w',...
                'position' , [520 60 90 25 ]);
            
        end % end of setUicontrols
        
        % Callback Parameters Serial
        %-----------------------------
        
        
        function selectValPort(obj, src)
            p = us191.serial.Discover;
            obj.valPort =  get(src, 'Value');
            obj.port =  p(obj.valPort);
        end
        
        function selectValDatabits(obj, src)
            obj.valDatabits =  get(src, 'value');
            switch obj.valDatabits
                case 1
                    obj.dataBits = {'7'};
                case 2
                    obj.dataBits = {'8'};
                otherwise
                    error('process:defDatabits',...
                        'Invalid dataBits value : %d.', ...
                        obj.dataBits);
            end
        end
        
        function selectValBaudrate(obj, src)
            obj.valBaudrate =  get(src, 'value');
            switch obj.valBaudrate
                case 1
                    obj.baudRate = {'300'};
                case 2
                    obj.baudRate = {'600'};
                case 3
                    obj.baudRate = {'1200'};
                case 4
                    obj.baudRate = {'2400'};
                case 5
                    obj.baudRate = {'4800'};
                case 6
                    obj.baudRate = {'9600'};
                case 7
                    obj.baudRate = {'19200'};
                case 8
                    obj.baudRate = {'57600'};
                case 9
                    obj.baudRate = {'112000'};
                    
                otherwise
                    error('process:defBaudRate',...
                        'Invalid baudRate value : %d.', ...
                        obj.baudRate);
            end
            
        end
        
        function selectValStopbits(obj, src)
            obj.valStopbits =  get(src, 'value');
            switch obj.valStopbits
                case 1
                    obj.stopBits = {'1'};
                case 2
                    obj.stopBits = {'2'};
                    
                otherwise
                    error('process:defStopbits',...
                        'Invalid baudRate value : %d.', ...
                        obj.stopBits);
            end
        end
        
        function selectValTerminator(obj, src)
            obj.valTerminator =  get(src, 'value');
            switch obj.valTerminator
                case 1
                    obj.terminator = {'CR'};
                case 2
                    obj.terminator = {'LF'};
                case 3
                    obj.terminator = {'CR/LF'};
                    
                otherwise
                    error('process:defTerminator',...
                        'Invalid dataBits value : %s.', ...
                        obj.terminator);
            end
            
        end
        
        function selectValParity(obj, src)
            obj.valParity =  get(src, 'value');
            switch obj.valParity
                case 1
                    obj.parity = {'none'};
                case 2
                    obj.parity = {'even'};
                case 3
                    obj.parity = {'odd'};
                    
                otherwise
                    error('process:defTerminator',...
                        'Invalid dataBits value : %s.', ...
                        obj.terminator);
            end
            
        end
        
       
        
        % Callback Measures
        %-----------------------------
        
        function startAcquisition(obj, src)
            
            if get(src, 'userdata') == false
                set(src, 'String', 'Initializing...');
                set(src, 'UserData', true);
                %Get date in all file name
                theBaudRate = str2double(obj.baudRate);
                theDataBits = str2double(obj.dataBits);
                theStopBits = str2double(obj.stopBits);
                ctd = us191.ctd(obj.xmlFile,obj.port,'baudrate',theBaudRate,...
                    'databits', theDataBits, 'stopbits', theStopBits, ...
                    'parity', obj.parity, 'terminator',obj.terminator);
                
                ctd.open;
                
                t = timer;
                t.StartDelay = str2double(obj.time);
                t.TimerFcn = {@obj.stopAcquisition, src, ctd};
                t.StartFcn = {@obj.changeButtonStart, src};
                t.StopFcn = {@obj.changeButton, src};
                start(t);
            end
        end
        
        function stopAcquisition(obj,t, ctd)
            fprintf(1,'timer elapsed after delay: %s sec\n', obj.time);
            stop(t);
            delete(t);
            close(ctd);
        end
        
        % Change on anonymous function
        function changeButtonStart(obj,t,~,src) %#ok<INUSL>
            set(src, 'BackGroundcolor','g','String','Running...');
        end
        
        % change on anonymous function
        function changeButton(obj,t,~,src) %#ok<INUSL>
            set(src, 'BackGroundcolor','r','String','START');
        end
        
        
        function s = saveConfig(obj)
            
            % save property values in struct
            s.valPort = obj.valPort;
            s.valBaudrate = obj.valBaudrate;
            s.valDatabits = obj.valDatabits;
            s.valStopBits = obj.valStopbits;
            s.valTerminator = obj.valTerminator;
            s.valParity = obj.valParity;
            s.valBoxBefore = obj.valBoxBefore;
            s.valBoxAfter = obj.valBoxAfter;
            
            save( obj.configFile, 's', '-v7.3')
            
        end % end of saveConfig
        
        function loadConfig(obj)
            
            % create a struct from public properties of the class
            theConfig = saveToStruct(obj);
            
            % test if configFile exist
            if exist(obj.configFile, 'file') == 2
                % load properties values from struct
                load(obj.configFile, 's');
                props = fieldnames(theConfig);
                for p = 1:numel(props)
                    if  isfield(s, props{p})
                        obj.(props{p}) = s.(props{p});
                    end
                end
            end
            
        end % end of loadConfig
    end
    
    methods (Access = private)
        
        % use this function instead of struct(obj)
        % ----------------------------------------
        function s = saveToStruct(obj)
            props = properties(obj);
            for p = 1:numel(props)
                s.(props{p}) = obj.(props{p});
            end
        end % end of saveToStruct
        
        
    end % end of  private methods
    
end

